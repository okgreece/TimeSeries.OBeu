% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/csv.ts.analysis.R
\name{csv.ts.analysis}
\alias{csv.ts.analysis}
\title{Read and analyze univariate time series data from csv files}
\usage{
csv.ts.analysis(file, headers = TRUE, separator = ";", quote = "\"", dec = ","
time, amount, prediction_steps=1)
}
\arguments{
\item{file}{The name of the file which the data are to be read from. This can be a compressed file.}

\item{headers}{A logical value indicating whether the file contains the names of the variables as 
its first line. If missing, the value is determined from the file format: header is set to TRUE 
if and only if the first row contains one fewer field than the number of columns.}

\item{separator}{The separator character. Define the character that separates the values on 
each line of the file. If sep = "" (which is the default for read.table) the separator is 
one or more spaces, tabs, newlines or carriage returns.}

\item{quotes}{The set of quoting characters. To disable quoting altogether, use quote = "". 
See scan {https://stat.ethz.ch/R-manual/R-devel/library/base/html/scan.html} 
for the behaviour on quotes embedded in quotes. Quoting is only considered for 
columns read as character.}

\item{decimal}{The character used in the file for decimal points.}

\item{time}{Specify the time label of the json time series data}

\item{amount}{Specify the amount label of the json time series data}

\item{prediction_steps}{The number of prediction steps}
}
\value{
A json string with the resulted parameters of the ts.analysis function.
}
\description{
Extract and analyze univariate time series data from csv files, using the ts.analysis function.
}
\details{
This function extracts the time series data provided with a csv file, in order to
return the results from the \code{\link{ts.analysis}} function.
}
\author{
Kleanthis Koupidis
}
\seealso{
\code{\link{ts.analysis}}, \code{\link{open_spending.ts}}
}

